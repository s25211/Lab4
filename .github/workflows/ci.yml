name: Docker Image CI

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/app:latest

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install tmux
      run: |
        sudo apt-get update
        sudo apt-get install -y tmux

    - name: Run Flask Application in tmux
      run: |
        tmux new-session -d -s flask_app 'python main.py'

    - name: Wait for Flask App to Start
      run: sleep 10

    - name: Predict from CSV
      run: |
        ls -la
        export FLASK_APP=main.py
        tmux new-session -d -s flask_session "flask run --host=0.0.0.0 --port=5000" # Uruchomienie aplikacji Flask w nowej sesji tmux
        sleep 5  # Czekaj chwilę, aby serwer miał czas na uruchomienie
        response=$(curl -X POST -F "file=@CollegeDistance.csv" http://localhost:5000/predict)
        echo "Response from server:" > response.txt
        echo "$response" >> response.txt
      shell: bash

    - name: Read and Display Prediction Result
      run: |
        cat prediction_result.txt
